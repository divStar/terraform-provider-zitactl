# Terraform Provider CI/CD Workflow
name: CI

on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'website/**'
  push:
    branches:
      - master
      - main
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'website/**'

permissions:
  contents: read

jobs:
  # Step 1: Lint
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

      - name: Run make lint
        run: make lint

  # Step 2: Build
  build:
    name: Build
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run make build
        run: make build

  # Step 3: Unit tests
  test:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run make test
        run: make test

  # Step 3: acceptance tests for Terraform and OpenTofu (using '../tools/docker-compose.yml')
  test-acceptance:
    name: Acceptance Tests (${{ matrix.tool }})
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        tool: [ terraform, opentofu ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Setup Terraform
        if: matrix.tool == 'terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Setup OpenTofu
        if: matrix.tool == 'opentofu'
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: latest
          tofu_wrapper: false

      - name: Debug before docker-compose
        run: |
          echo "Current directory: " $PWD
          echo "Certs directory contents:"
          ls -la $PWD/**/*
          echo "Absolute path to certs:"
          realpath $PWD

      - name: Start Zitadel
        run: make zitadel-up

      - name: Show Zitadel logs on failure
        if: failure()
        run: |
          docker ps
          echo "=== Zitadel logs ==="
          docker compose logs zitadel
          echo "=== DB logs ==="
          docker compose logs db

      - name: Run make testacc
        env:
          TF_ACC: "1"
        run: make testacc
        continue-on-error: true

      - name: Stop Zitadel
        if: always()
        run: make zitadel-down

  # Step 4: Generate license headers and docs
  generate:
    name: Generate
    needs: [ test, test-acceptance ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Run make generate
        run: make generate

      - name: Verify no uncommitted changes
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference after 'make generate'. Run 'make generate' and commit the changes."; exit 1)